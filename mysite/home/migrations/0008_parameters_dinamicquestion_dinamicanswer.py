# Generated by Django 4.2.5 on 2023-09-24 04:01

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("home", "0007_task_counter_alter_task_wrongs_counter"),
    ]

    operations = [
        migrations.CreateModel(
            name="Parameters",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("parameter", models.CharField(max_length=100)),
                ("min_val", models.IntegerField(default=0)),
                ("max_val", models.IntegerField(default=0)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dinamic_question_parameters",
                        to="home.question",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="DinamicQuestion",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("question_text", models.CharField(max_length=1000)),
                ("hint", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "difficulty",
                    models.IntegerField(
                        choices=[(1, "Easy"), (2, "Medium"), (3, "Hard")], default=1
                    ),
                ),
                (
                    "theme",
                    models.IntegerField(
                        choices=[
                            (1, "Caracteristicas de la onda"),
                            (2, "Ondas Sonoras"),
                            (3, "Ondas Armonicas"),
                            (4, "Ecuacion de la Onda"),
                            (5, "Energias e info. transferida"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dinamic_task_questions",
                        to="home.task",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="DinamicAnswer",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("metrics", models.CharField(max_length=100)),
                ("equation", models.CharField(blank=True, max_length=1000)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dinamic_question_answer",
                        to="home.question",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
    ]
